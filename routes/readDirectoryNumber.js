/*
 * script route generated by KOMA
 * @author : Yan Yan Purdiansah
 */    
var express = require('express');
var router = express.Router();
var dateFormat = require('dateformat');    
var database = require('./dao');
var dao = new database.Dao();    
var sessionChecker = require('./security');
var appresource = {
    Title:'DirectoryNumberRead',
    Heading:'DirectoryNumber',
    DnId:{label :'DnId'},
    Plcode:{label :'Plcode'},
    Ndc:{label :'Ndc'},
    Hlcode:{label :'Hlcode'},
    DnNum:{label :'DnNum'},
    DnStatus:{label :'DnStatus'},
    DnStatusModDate:{label :'DnStatusModDate'},
    DealerId:{label :'DealerId'},
    DnAssignDate:{label :'DnAssignDate'},
    DnPhoneFlag:{label :'DnPhoneFlag'},
    DnType:{label :'DnType'},
    DnStatusRequ:{label :'DnStatusRequ'},
    DnStaRequDate:{label :'DnStaRequDate'},
    DnAssign:{label :'DnAssign'},
    DnEntdate:{label :'DnEntdate'},
    DnModdate:{label :'DnModdate'},
    DnModflag:{label :'DnModflag'},
    DnAuth:{label :'DnAuth'},
    Evcode:{label :'Evcode'},
    Hmcode:{label :'Hmcode'},
    LocalPrefixLen:{label :'LocalPrefixLen'},
    SimpohId:{label :'SimpohId'},
    SimpotId:{label :'SimpotId'},
    SimpotBatch:{label :'SimpotBatch'},
    ExternalInd:{label :'ExternalInd'},
    BlockInd:{label :'BlockInd'},
    ExtensionLengthMax:{label :'ExtensionLengthMax'},
    DnAuthPending:{label :'DnAuthPending'},
    RecVersion:{label :'RecVersion'},
    DirnumNpcode:{label :'DirnumNpcode'},
    VpnId:{label :'VpnId'},
    StaticPdpRequired:{label :'StaticPdpRequired'},
    RoamingAllowed:{label :'RoamingAllowed'},
    TransactionId:{label :'TransactionId'},
    BusinessUnitId:{label :'BusinessUnitId'},
    ReservedForPortingInd:{label :'ReservedForPortingInd'},
    PortedNumberInd:{label :'PortedNumberInd'},
    Rscode:{label :'Rscode'},
    }

router.get('/', sessionChecker, function(req, res, next) {
    var jsonObj = req.query;
    jsonObj.rowid = 0;
    req.session.previouspath = 'readDirectoryNumber?'+req._parsedUrl.query;
    parameter = {
        session: req.session,
        cookies: req.cookies,
        resource: appresource,
        dateFormat: dateFormat,
    }
    var readDirectoryNumber = new Promise((resolve, reject) => {
        setTimeout(() => {
            dao.readDirectoryNumber(jsonObj,function(err,rows) {
                if(err) res.status(err.code).end();
                else{
                    if(rows[0]===undefined) res.redirect('/searchDirectoryNumber');
                    else{ 
                        jsonObj = rows[0];
                        resolve(jsonObj);
                    }
                }
            });
        },1000);
    });
    
    var sendResult = (results) => {
        console.log(jsonObj)
        parameter.record = jsonObj;        
        res.render('DirectoryNumberReadPage',parameter);
    }    
    Promise.all([readDirectoryNumber]).then(sendResult);
});

module.exports = router;
