/*
 * script route generated by KOMA
 * @author : Yan Yan Purdiansah
 */    
var express = require('express');
var router = express.Router();
var dateFormat = require('dateformat');    
var database = require('./dao');
var dao = new database.Dao();    
var sessionChecker = require('./security');
var appresource = {
    Title:'CustomerAllNew',
    Heading:'CustomerAll',
    CustomerId:{label :'CustomerId'},
    CustomerIdHigh:{label :'CustomerIdHigh'},
    Custcode:{label :'Custcode'},
    Csst:{label :'Csst'},
    Cstype:{label :'Cstype'},
    Csactivated:{label :'Csactivated'},
    Csdeactivated:{label :'Csdeactivated'},
    CstypeDate:{label :'CstypeDate'},
    Cslevel:{label :'Cslevel'},
    Cslvlname:{label :'Cslvlname'},
    Tmcode:{label :'Tmcode'},
    Prgcode:{label :'Prgcode'},
    Csclimit:{label :'Csclimit'},
    Cscurbalance:{label :'Cscurbalance'},
    Csdepdate:{label :'Csdepdate'},
    Cstestbillrun:{label :'Cstestbillrun'},
    BillLayout:{label :'BillLayout'},
    Paymntresp:{label :'Paymntresp'},
    TargetReached:{label :'TargetReached'},
    Pcsmethpaymnt:{label :'Pcsmethpaymnt'},
    DunningFlag:{label :'DunningFlag'},
    CommNo:{label :'CommNo'},
    PosCommType:{label :'PosCommType'},
    BtxPassword:{label :'BtxPassword'},
    BtxUser:{label :'BtxUser'},
    SettlesPMonth:{label :'SettlesPMonth'},
    Cashretour:{label :'Cashretour'},
    Cstradecode:{label :'Cstradecode'},
    Cspassword:{label :'Cspassword'},
    Cspromotion:{label :'Cspromotion'},
    Csreason:{label :'Csreason'},
    Cscollector:{label :'Cscollector'},
    Cscontresp:{label :'Cscontresp'},
    Csdeposit:{label :'Csdeposit'},
    CscreditDate:{label :'CscreditDate'},
    CscreditRemark:{label :'CscreditRemark'},
    Suspended:{label :'Suspended'},
    Reactivated:{label :'Reactivated'},
    PrevBalance:{label :'PrevBalance'},
    LbcDate:{label :'LbcDate'},
    CrlimitExc:{label :'CrlimitExc'},
    AreaId:{label :'AreaId'},
    CostcenterId:{label :'CostcenterId'},
    Csfedtaxid:{label :'Csfedtaxid'},
    CreditRating:{label :'CreditRating'},
    CscreditStatus:{label :'CscreditStatus'},
    DeactCreateDate:{label :'DeactCreateDate'},
    DeactReceipDate:{label :'DeactReceipDate'},
    EdifactAddr:{label :'EdifactAddr'},
    EdifactUserFlag:{label :'EdifactUserFlag'},
    EdifactFlag:{label :'EdifactFlag'},
    CsdepositDueDate:{label :'CsdepositDueDate'},
    CalculateDeposit:{label :'CalculateDeposit'},
    TmcodeDate:{label :'TmcodeDate'},
    Csrentalbc:{label :'Csrentalbc'},
    UserLastmod:{label :'UserLastmod'},
    Csentdate:{label :'Csentdate'},
    Csmoddate:{label :'Csmoddate'},
    Csmod:{label :'Csmod'},
    CustomerIdExt:{label :'CustomerIdExt'},
    CsclimitOTr1:{label :'CsclimitOTr1'},
    CsclimitOTr2:{label :'CsclimitOTr2'},
    CsclimitOTr3:{label :'CsclimitOTr3'},
    CscreditScore:{label :'CscreditScore'},
    Cstraderef:{label :'Cstraderef'},
    Wpid:{label :'Wpid'},
    Csprepayment:{label :'Csprepayment'},
    Csremark1:{label :'Csremark1'},
    Csremark2:{label :'Csremark2'},
    BillInformation:{label :'BillInformation'},
    DealerId:{label :'DealerId'},
    DunningMode:{label :'DunningMode'},
    NotValid:{label :'NotValid'},
    CscrdcheckAgreed:{label :'CscrdcheckAgreed'},
    ExpectPayCurrId:{label :'ExpectPayCurrId'},
    ConvratetypePayment:{label :'ConvratetypePayment'},
    RefundCurrId:{label :'RefundCurrId'},
    ConvratetypeRefund:{label :'ConvratetypeRefund'},
    Srcode:{label :'Srcode'},
    Currency:{label :'Currency'},
    RecVersion:{label :'RecVersion'},
    AnonymousCustomer:{label :'AnonymousCustomer'},
    ExternalCustomerId:{label :'ExternalCustomerId'},
    ExternalCustomerSetId:{label :'ExternalCustomerSetId'},
    Custnum:{label :'Custnum'},
    BusinessUnitId:{label :'BusinessUnitId'},
    PartyTypeId:{label :'PartyTypeId'},
    IndividualOverdiscFlag:{label :'IndividualOverdiscFlag'},
    BillingThreshold:{label :'BillingThreshold'},
    BillingThresholdCurrency:{label :'BillingThresholdCurrency'},
    ThresholdBillingMode:{label :'ThresholdBillingMode'},
    ThresholdBillingPurpose:{label :'ThresholdBillingPurpose'},
    CollectionInd:{label :'CollectionInd'},
    RrCandidate:{label :'RrCandidate'},
    BchLastRunDate:{label :'BchLastRunDate'},
    CreatedByUser:{label :'CreatedByUser'},
    }

router.get('/', sessionChecker, function(req, res, next) {
    parameter = {
        session: req.session,
        cookies: req.cookies,
        resource: appresource,
        dateFormat: dateFormat,
        statusCode:100,
        statusMessage:'',        
        record:{customerId:'',
        customerIdHigh:'',
        custcode:'',
        csst:'',
        cstype:'',
        csactivated:'',
        csdeactivated:'',
        cstypeDate:'',
        cslevel:'',
        cslvlname:'',
        tmcode:'',
        prgcode:'',
        csclimit:'',
        cscurbalance:'',
        csdepdate:'',
        cstestbillrun:'',
        billLayout:'',
        paymntresp:'',
        targetReached:'',
        pcsmethpaymnt:'',
        dunningFlag:'',
        commNo:'',
        posCommType:'',
        btxPassword:'',
        btxUser:'',
        settlesPMonth:'',
        cashretour:'',
        cstradecode:'',
        cspassword:'',
        cspromotion:'',
        csreason:'',
        cscollector:'',
        cscontresp:'',
        csdeposit:'',
        cscreditDate:'',
        cscreditRemark:'',
        suspended:'',
        reactivated:'',
        prevBalance:'',
        lbcDate:'',
        crlimitExc:'',
        areaId:'',
        costcenterId:'',
        csfedtaxid:'',
        creditRating:'',
        cscreditStatus:'',
        deactCreateDate:'',
        deactReceipDate:'',
        edifactAddr:'',
        edifactUserFlag:'',
        edifactFlag:'',
        csdepositDueDate:'',
        calculateDeposit:'',
        tmcodeDate:'',
        csrentalbc:'',
        userLastmod:'',
        csentdate:'',
        csmoddate:'',
        csmod:'',
        customerIdExt:'',
        csclimitOTr1:'',
        csclimitOTr2:'',
        csclimitOTr3:'',
        cscreditScore:'',
        cstraderef:'',
        wpid:'',
        csprepayment:'',
        csremark1:'',
        csremark2:'',
        billInformation:'',
        dealerId:'',
        dunningMode:'',
        notValid:'',
        cscrdcheckAgreed:'',
        expectPayCurrId:'',
        convratetypePayment:'',
        refundCurrId:'',
        convratetypeRefund:'',
        srcode:'',
        currency:'',
        recVersion:'',
        anonymousCustomer:'',
        externalCustomerId:'',
        externalCustomerSetId:'',
        custnum:'',
        businessUnitId:'',
        partyTypeId:'',
        individualOverdiscFlag:'',
        billingThreshold:'',
        billingThresholdCurrency:'',
        thresholdBillingMode:'',
        thresholdBillingPurpose:'',
        collectionInd:'',
        rrCandidate:'',
        bchLastRunDate:'',
        createdByUser:'',
        }
    }
    res.render('CustomerAllNewPage',parameter);
    console.log(parameter);
});
router.post('/', sessionChecker, function(req, res, next) {
    var jsonObj = req.body;
    parameter = {
        session: req.session,
        cookies: req.cookies,
        resource: appresource,
        dateFormat: dateFormat,
    }    
    dao.newCustomerAll(jsonObj,function(err,rows) {
        if(err==null){
            parameter.statusCode = 200;
            parameter.statusMessage = 'Successfully created';
        }else{
            parameter.statusCode = err.code;
            parameter.statusMessage = err.message;
        }
        parameter.record = jsonObj;
        res.render('CustomerAllNewPage',parameter);
        console.log(parameter);        
    });
});

module.exports = router;
