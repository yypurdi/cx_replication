/*
 * script route generated by KOMA
 * @author : Yan Yan Purdiansah
 */    
var express = require('express');
var router = express.Router();
var dateFormat = require('dateformat');    
var database = require('./dao');
var dao = new database.Dao();    
var sessionChecker = require('./security');
var appresource = {
    Title:'ContrServicesCapNew',
    Heading:'ContrServicesCap',
    CoId:{label :'CoId'},
    Sncode:{label :'Sncode'},
    Seqno:{label :'Seqno'},
    SeqnoPre:{label :'SeqnoPre'},
    Bccode:{label :'Bccode'},
    PendingBccode:{label :'PendingBccode'},
    DnId:{label :'DnId'},
    DnBlockId:{label :'DnBlockId'},
    MainDirnum:{label :'MainDirnum'},
    CsStatus:{label :'CsStatus'},
    CsActivDate:{label :'CsActivDate'},
    CsDeactivDate:{label :'CsDeactivDate'},
    CsRequest:{label :'CsRequest'},
    RecVersion:{label :'RecVersion'},
    PublicNumberDnId:{label :'PublicNumberDnId'},
    VpnId:{label :'VpnId'},
    PublicBlockId:{label :'PublicBlockId'},
    ProfileId:{label :'ProfileId'},
    DnShownInBill:{label :'DnShownInBill'},
    RequestId:{label :'RequestId'},
    }

router.get('/', sessionChecker, function(req, res, next) {
    parameter = {
        session: req.session,
        cookies: req.cookies,
        resource: appresource,
        dateFormat: dateFormat,
        statusCode:100,
        statusMessage:'',        
        record:{coId:'',
        sncode:'',
        seqno:'',
        seqnoPre:'',
        bccode:'',
        pendingBccode:'',
        dnId:'',
        dnBlockId:'',
        mainDirnum:'',
        csStatus:'',
        csActivDate:'',
        csDeactivDate:'',
        csRequest:'',
        recVersion:'',
        publicNumberDnId:'',
        vpnId:'',
        publicBlockId:'',
        profileId:'',
        dnShownInBill:'',
        requestId:'',
        }
    }
    res.render('ContrServicesCapNewPage',parameter);
    console.log(parameter);
});
router.post('/', sessionChecker, function(req, res, next) {
    var jsonObj = req.body;
    parameter = {
        session: req.session,
        cookies: req.cookies,
        resource: appresource,
        dateFormat: dateFormat,
    }    
    dao.newContrServicesCap(jsonObj,function(err,rows) {
        if(err==null){
            parameter.statusCode = 200;
            parameter.statusMessage = 'Successfully created';
        }else{
            parameter.statusCode = err.code;
            parameter.statusMessage = err.message;
        }
        parameter.record = jsonObj;
        res.render('ContrServicesCapNewPage',parameter);
        console.log(parameter);        
    });
});

module.exports = router;
