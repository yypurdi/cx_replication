/*
 * script route generated by KOMA
 * @author : Yan Yan Purdiansah
 */    
var express = require('express');
var router = express.Router();
var dateFormat = require('dateformat');    
var database = require('./dao');
var dao = new database.Dao();    
var sessionChecker = require('./security');
var appresource = {
    Title:'ProfileServiceRead',
    Heading:'ProfileService',
    ProfileId:{label :'ProfileId'},
    CoId:{label :'CoId'},
    Sncode:{label :'Sncode'},
    SpcodeHistno:{label :'SpcodeHistno'},
    StatusHistno:{label :'StatusHistno'},
    EntryDate:{label :'EntryDate'},
    ChannelNum:{label :'ChannelNum'},
    OvwAccFirst:{label :'OvwAccFirst'},
    DateBilled:{label :'DateBilled'},
    SnClass:{label :'SnClass'},
    OvwSubscr:{label :'OvwSubscr'},
    Subscript:{label :'Subscript'},
    OvwAccess:{label :'OvwAccess'},
    OvwAccPrd:{label :'OvwAccPrd'},
    Accessfee:{label :'Accessfee'},
    ChannelExcl:{label :'ChannelExcl'},
    DisSubscr:{label :'DisSubscr'},
    InstallDate:{label :'InstallDate'},
    TrialEndDate:{label :'TrialEndDate'},
    PrmValueId:{label :'PrmValueId'},
    Currency:{label :'Currency'},
    SrvType:{label :'SrvType'},
    SrvSubtype:{label :'SrvSubtype'},
    OvwAdvCharge:{label :'OvwAdvCharge'},
    AdvCharge:{label :'AdvCharge'},
    AdvChargePrd:{label :'AdvChargePrd'},
    DeleteFlag:{label :'DeleteFlag'},
    RecVersion:{label :'RecVersion'},
    AttribHistno:{label :'AttribHistno'},
    AttribHistnoNnp:{label :'AttribHistnoNnp'},
    PrServSpcodeHist:{Heading:'PrServSpcodeHist',
        ProfileId:{header:'ProfileId'},
        CoId:{header:'CoId'},
        Sncode:{header:'Sncode'},
        Histno:{header:'Histno'},
        Spcode:{header:'Spcode'},
        Transactionno:{header:'Transactionno'},
        ValidFromDate:{header:'ValidFromDate'},
        EntryDate:{header:'EntryDate'},
        RequestId:{header:'RequestId'},
        RecVersion:{header:'RecVersion'},
        },
    PrServStatusHist:{Heading:'PrServStatusHist',
        ProfileId:{header:'ProfileId'},
        CoId:{header:'CoId'},
        Sncode:{header:'Sncode'},
        Histno:{header:'Histno'},
        Status:{header:'Status'},
        Reason:{header:'Reason'},
        Transactionno:{header:'Transactionno'},
        ValidFromDate:{header:'ValidFromDate'},
        EntryDate:{header:'EntryDate'},
        RequestId:{header:'RequestId'},
        RecVersion:{header:'RecVersion'},
        UserReason:{header:'UserReason'},
        },
    }

router.get('/', sessionChecker, function(req, res, next) {
    var jsonObj = req.query;
    jsonObj.rowid = 0;
    req.session.previouspath = 'readProfileService?'+req._parsedUrl.query;
    parameter = {
        session: req.session,
        cookies: req.cookies,
        resource: appresource,
        dateFormat: dateFormat,
    }
    var readProfileService = new Promise((resolve, reject) => {
        setTimeout(() => {
            dao.readProfileService(jsonObj,function(err,rows) {
                if(err) res.status(err.code).end();
                else{
                    if(rows[0]===undefined) res.redirect('/searchProfileService');
                    else{ 
                        jsonObj = rows[0];
                        resolve(jsonObj);
                    }
                }
            });
        },1000);
    });
    
    var prServSpcodeHist = new Promise((resolve, reject) => {
        setTimeout(() => {
            dao.searchPrServSpcodeHist(jsonObj,function(err,rows) {
                jsonObj.prServSpcodeHist = rows;
                resolve(jsonObj);
            });
        },1000);
    });
    
    var prServStatusHist = new Promise((resolve, reject) => {
        setTimeout(() => {
            dao.searchPrServStatusHist(jsonObj,function(err,rows) {
                jsonObj.prServStatusHist = rows;
                resolve(jsonObj);
            });
        },1000);
    });
    
    var sendResult = (results) => {
        console.log(jsonObj)
        parameter.record = jsonObj;        
        res.render('ProfileServiceReadPage',parameter);
    }    
    Promise.all([readProfileService,prServSpcodeHist,prServStatusHist]).then(sendResult);
});

module.exports = router;
