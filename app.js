/*
 * script route generated by KOMA
 * @author : Yan Yan Purdiansah
 */
var express = require('express');
var session = require('express-session');
var device = require('express-device');
var logger = require('morgan');
var bodyParser = require('body-parser');
var cookieParser = require('cookie-parser');
var path = require('path');
var createError = require('http-errors');

var indexRouter = require('./routes/index');
var mobileRouter = require('./routes/mobile');
var searchAppAuthorities = require('./routes/searchAppAuthorities');
var searchAppContact = require('./routes/searchAppContact');
var searchAppGroupAuthorities = require('./routes/searchAppGroupAuthorities');
var searchAppGroupMembers = require('./routes/searchAppGroupMembers');
var searchAppGroups = require('./routes/searchAppGroups');
var searchAppMenus = require('./routes/searchAppMenus');
var searchAppMessage = require('./routes/searchAppMessage');
var searchAppPersistentLogins = require('./routes/searchAppPersistentLogins');
var searchAppRoom = require('./routes/searchAppRoom');
var searchAppUsers = require('./routes/searchAppUsers');
var searchCcontactAll = require('./routes/searchCcontactAll');
var searchContrDevices = require('./routes/searchContrDevices');
var searchContrServicesCap = require('./routes/searchContrServicesCap');
var searchContractAll = require('./routes/searchContractAll');
var searchContractHistory = require('./routes/searchContractHistory');
var searchCustomerAll = require('./routes/searchCustomerAll');
var searchDirectoryNumber = require('./routes/searchDirectoryNumber');
var searchInfoContrCheck = require('./routes/searchInfoContrCheck');
var searchInfoContrCombo = require('./routes/searchInfoContrCombo');
var searchInfoContrText = require('./routes/searchInfoContrText');
var searchInfoCustCheck = require('./routes/searchInfoCustCheck');
var searchInfoCustCombo = require('./routes/searchInfoCustCombo');
var searchInfoCustText = require('./routes/searchInfoCustText');
var searchOrderhdrAll = require('./routes/searchOrderhdrAll');
var searchOrdertrailer = require('./routes/searchOrdertrailer');
var searchPort = require('./routes/searchPort');
var searchPrServSpcodeHist = require('./routes/searchPrServSpcodeHist');
var searchPrServStatusHist = require('./routes/searchPrServStatusHist');
var searchProfileService = require('./routes/searchProfileService');
var searchStorageMedium = require('./routes/searchStorageMedium');
var readAppAuthorities = require('./routes/readAppAuthorities');
var readAppContact = require('./routes/readAppContact');
var readAppGroupAuthorities = require('./routes/readAppGroupAuthorities');
var readAppGroupMembers = require('./routes/readAppGroupMembers');
var readAppGroups = require('./routes/readAppGroups');
var readAppMenus = require('./routes/readAppMenus');
var readAppMessage = require('./routes/readAppMessage');
var readAppPersistentLogins = require('./routes/readAppPersistentLogins');
var readAppRoom = require('./routes/readAppRoom');
var readAppUsers = require('./routes/readAppUsers');
var readCcontactAll = require('./routes/readCcontactAll');
var readContrDevices = require('./routes/readContrDevices');
var readContrServicesCap = require('./routes/readContrServicesCap');
var readContractAll = require('./routes/readContractAll');
var readContractHistory = require('./routes/readContractHistory');
var readCustomerAll = require('./routes/readCustomerAll');
var readDirectoryNumber = require('./routes/readDirectoryNumber');
var readInfoContrCheck = require('./routes/readInfoContrCheck');
var readInfoContrCombo = require('./routes/readInfoContrCombo');
var readInfoContrText = require('./routes/readInfoContrText');
var readInfoCustCheck = require('./routes/readInfoCustCheck');
var readInfoCustCombo = require('./routes/readInfoCustCombo');
var readInfoCustText = require('./routes/readInfoCustText');
var readOrderhdrAll = require('./routes/readOrderhdrAll');
var readOrdertrailer = require('./routes/readOrdertrailer');
var readPort = require('./routes/readPort');
var readPrServSpcodeHist = require('./routes/readPrServSpcodeHist');
var readPrServStatusHist = require('./routes/readPrServStatusHist');
var readProfileService = require('./routes/readProfileService');
var readStorageMedium = require('./routes/readStorageMedium');
var newAppAuthorities = require('./routes/newAppAuthorities');
var newAppContact = require('./routes/newAppContact');
var newAppGroupAuthorities = require('./routes/newAppGroupAuthorities');
var newAppGroupMembers = require('./routes/newAppGroupMembers');
var newAppGroups = require('./routes/newAppGroups');
var newAppMenus = require('./routes/newAppMenus');
var newAppMessage = require('./routes/newAppMessage');
var newAppPersistentLogins = require('./routes/newAppPersistentLogins');
var newAppRoom = require('./routes/newAppRoom');
var newAppUsers = require('./routes/newAppUsers');
var newCcontactAll = require('./routes/newCcontactAll');
var newContrDevices = require('./routes/newContrDevices');
var newContrServicesCap = require('./routes/newContrServicesCap');
var newContractAll = require('./routes/newContractAll');
var newContractHistory = require('./routes/newContractHistory');
var newCustomerAll = require('./routes/newCustomerAll');
var newDirectoryNumber = require('./routes/newDirectoryNumber');
var newInfoContrCheck = require('./routes/newInfoContrCheck');
var newInfoContrCombo = require('./routes/newInfoContrCombo');
var newInfoContrText = require('./routes/newInfoContrText');
var newInfoCustCheck = require('./routes/newInfoCustCheck');
var newInfoCustCombo = require('./routes/newInfoCustCombo');
var newInfoCustText = require('./routes/newInfoCustText');
var newOrderhdrAll = require('./routes/newOrderhdrAll');
var newOrdertrailer = require('./routes/newOrdertrailer');
var newPort = require('./routes/newPort');
var newPrServSpcodeHist = require('./routes/newPrServSpcodeHist');
var newPrServStatusHist = require('./routes/newPrServStatusHist');
var newProfileService = require('./routes/newProfileService');
var newStorageMedium = require('./routes/newStorageMedium');
var writeAppAuthorities = require('./routes/writeAppAuthorities');
var writeAppContact = require('./routes/writeAppContact');
var writeAppGroupAuthorities = require('./routes/writeAppGroupAuthorities');
var writeAppGroupMembers = require('./routes/writeAppGroupMembers');
var writeAppGroups = require('./routes/writeAppGroups');
var writeAppMenus = require('./routes/writeAppMenus');
var writeAppMessage = require('./routes/writeAppMessage');
var writeAppPersistentLogins = require('./routes/writeAppPersistentLogins');
var writeAppRoom = require('./routes/writeAppRoom');
var writeAppUsers = require('./routes/writeAppUsers');
var writeCcontactAll = require('./routes/writeCcontactAll');
var writeContrDevices = require('./routes/writeContrDevices');
var writeContrServicesCap = require('./routes/writeContrServicesCap');
var writeContractAll = require('./routes/writeContractAll');
var writeContractHistory = require('./routes/writeContractHistory');
var writeCustomerAll = require('./routes/writeCustomerAll');
var writeDirectoryNumber = require('./routes/writeDirectoryNumber');
var writeInfoContrCheck = require('./routes/writeInfoContrCheck');
var writeInfoContrCombo = require('./routes/writeInfoContrCombo');
var writeInfoContrText = require('./routes/writeInfoContrText');
var writeInfoCustCheck = require('./routes/writeInfoCustCheck');
var writeInfoCustCombo = require('./routes/writeInfoCustCombo');
var writeInfoCustText = require('./routes/writeInfoCustText');
var writeOrderhdrAll = require('./routes/writeOrderhdrAll');
var writeOrdertrailer = require('./routes/writeOrdertrailer');
var writePort = require('./routes/writePort');
var writePrServSpcodeHist = require('./routes/writePrServSpcodeHist');
var writePrServStatusHist = require('./routes/writePrServStatusHist');
var writeProfileService = require('./routes/writeProfileService');
var writeStorageMedium = require('./routes/writeStorageMedium');
var deleteAppAuthorities = require('./routes/deleteAppAuthorities');
var deleteAppContact = require('./routes/deleteAppContact');
var deleteAppGroupAuthorities = require('./routes/deleteAppGroupAuthorities');
var deleteAppGroupMembers = require('./routes/deleteAppGroupMembers');
var deleteAppGroups = require('./routes/deleteAppGroups');
var deleteAppMenus = require('./routes/deleteAppMenus');
var deleteAppMessage = require('./routes/deleteAppMessage');
var deleteAppPersistentLogins = require('./routes/deleteAppPersistentLogins');
var deleteAppRoom = require('./routes/deleteAppRoom');
var deleteAppUsers = require('./routes/deleteAppUsers');
var deleteCcontactAll = require('./routes/deleteCcontactAll');
var deleteContrDevices = require('./routes/deleteContrDevices');
var deleteContrServicesCap = require('./routes/deleteContrServicesCap');
var deleteContractAll = require('./routes/deleteContractAll');
var deleteContractHistory = require('./routes/deleteContractHistory');
var deleteCustomerAll = require('./routes/deleteCustomerAll');
var deleteDirectoryNumber = require('./routes/deleteDirectoryNumber');
var deleteInfoContrCheck = require('./routes/deleteInfoContrCheck');
var deleteInfoContrCombo = require('./routes/deleteInfoContrCombo');
var deleteInfoContrText = require('./routes/deleteInfoContrText');
var deleteInfoCustCheck = require('./routes/deleteInfoCustCheck');
var deleteInfoCustCombo = require('./routes/deleteInfoCustCombo');
var deleteInfoCustText = require('./routes/deleteInfoCustText');
var deleteOrderhdrAll = require('./routes/deleteOrderhdrAll');
var deleteOrdertrailer = require('./routes/deleteOrdertrailer');
var deletePort = require('./routes/deletePort');
var deletePrServSpcodeHist = require('./routes/deletePrServSpcodeHist');
var deletePrServStatusHist = require('./routes/deletePrServStatusHist');
var deleteProfileService = require('./routes/deleteProfileService');
var deleteStorageMedium = require('./routes/deleteStorageMedium');

var domain = 'domain.com';
var app = express();

app.use(session({
    key: 'user_sid',
    secret: 'secret',
    resave: false,
    saveUninitialized: true,
    cookie: {
        expires: 6000000
    }  
}));

app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

app.use(logger('dev'));
app.use(cookieParser());
app.use(device.capture());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended : true}));

app.use(express.static(path.join(__dirname, 'public')));

app.use((req, res, next) => {
  req.session.domain = domain;
  if (req.cookies.user_sid && !req.session.user_sid) {
      res.clearCookie('user_sid');
  }
  next();
});

app.use('/', indexRouter);
app.use('/mobile', mobileRouter);
app.use('/searchAppAuthorities', searchAppAuthorities);
app.use('/searchAppContact', searchAppContact);
app.use('/searchAppGroupAuthorities', searchAppGroupAuthorities);
app.use('/searchAppGroupMembers', searchAppGroupMembers);
app.use('/searchAppGroups', searchAppGroups);
app.use('/searchAppMenus', searchAppMenus);
app.use('/searchAppMessage', searchAppMessage);
app.use('/searchAppPersistentLogins', searchAppPersistentLogins);
app.use('/searchAppRoom', searchAppRoom);
app.use('/searchAppUsers', searchAppUsers);
app.use('/searchCcontactAll', searchCcontactAll);
app.use('/searchContrDevices', searchContrDevices);
app.use('/searchContrServicesCap', searchContrServicesCap);
app.use('/searchContractAll', searchContractAll);
app.use('/searchContractHistory', searchContractHistory);
app.use('/searchCustomerAll', searchCustomerAll);
app.use('/searchDirectoryNumber', searchDirectoryNumber);
app.use('/searchInfoContrCheck', searchInfoContrCheck);
app.use('/searchInfoContrCombo', searchInfoContrCombo);
app.use('/searchInfoContrText', searchInfoContrText);
app.use('/searchInfoCustCheck', searchInfoCustCheck);
app.use('/searchInfoCustCombo', searchInfoCustCombo);
app.use('/searchInfoCustText', searchInfoCustText);
app.use('/searchOrderhdrAll', searchOrderhdrAll);
app.use('/searchOrdertrailer', searchOrdertrailer);
app.use('/searchPort', searchPort);
app.use('/searchPrServSpcodeHist', searchPrServSpcodeHist);
app.use('/searchPrServStatusHist', searchPrServStatusHist);
app.use('/searchProfileService', searchProfileService);
app.use('/searchStorageMedium', searchStorageMedium);
app.use('/readAppAuthorities', readAppAuthorities);
app.use('/readAppContact', readAppContact);
app.use('/readAppGroupAuthorities', readAppGroupAuthorities);
app.use('/readAppGroupMembers', readAppGroupMembers);
app.use('/readAppGroups', readAppGroups);
app.use('/readAppMenus', readAppMenus);
app.use('/readAppMessage', readAppMessage);
app.use('/readAppPersistentLogins', readAppPersistentLogins);
app.use('/readAppRoom', readAppRoom);
app.use('/readAppUsers', readAppUsers);
app.use('/readCcontactAll', readCcontactAll);
app.use('/readContrDevices', readContrDevices);
app.use('/readContrServicesCap', readContrServicesCap);
app.use('/readContractAll', readContractAll);
app.use('/readContractHistory', readContractHistory);
app.use('/readCustomerAll', readCustomerAll);
app.use('/readDirectoryNumber', readDirectoryNumber);
app.use('/readInfoContrCheck', readInfoContrCheck);
app.use('/readInfoContrCombo', readInfoContrCombo);
app.use('/readInfoContrText', readInfoContrText);
app.use('/readInfoCustCheck', readInfoCustCheck);
app.use('/readInfoCustCombo', readInfoCustCombo);
app.use('/readInfoCustText', readInfoCustText);
app.use('/readOrderhdrAll', readOrderhdrAll);
app.use('/readOrdertrailer', readOrdertrailer);
app.use('/readPort', readPort);
app.use('/readPrServSpcodeHist', readPrServSpcodeHist);
app.use('/readPrServStatusHist', readPrServStatusHist);
app.use('/readProfileService', readProfileService);
app.use('/readStorageMedium', readStorageMedium);
app.use('/newAppAuthorities', newAppAuthorities);
app.use('/newAppContact', newAppContact);
app.use('/newAppGroupAuthorities', newAppGroupAuthorities);
app.use('/newAppGroupMembers', newAppGroupMembers);
app.use('/newAppGroups', newAppGroups);
app.use('/newAppMenus', newAppMenus);
app.use('/newAppMessage', newAppMessage);
app.use('/newAppPersistentLogins', newAppPersistentLogins);
app.use('/newAppRoom', newAppRoom);
app.use('/newAppUsers', newAppUsers);
app.use('/newCcontactAll', newCcontactAll);
app.use('/newContrDevices', newContrDevices);
app.use('/newContrServicesCap', newContrServicesCap);
app.use('/newContractAll', newContractAll);
app.use('/newContractHistory', newContractHistory);
app.use('/newCustomerAll', newCustomerAll);
app.use('/newDirectoryNumber', newDirectoryNumber);
app.use('/newInfoContrCheck', newInfoContrCheck);
app.use('/newInfoContrCombo', newInfoContrCombo);
app.use('/newInfoContrText', newInfoContrText);
app.use('/newInfoCustCheck', newInfoCustCheck);
app.use('/newInfoCustCombo', newInfoCustCombo);
app.use('/newInfoCustText', newInfoCustText);
app.use('/newOrderhdrAll', newOrderhdrAll);
app.use('/newOrdertrailer', newOrdertrailer);
app.use('/newPort', newPort);
app.use('/newPrServSpcodeHist', newPrServSpcodeHist);
app.use('/newPrServStatusHist', newPrServStatusHist);
app.use('/newProfileService', newProfileService);
app.use('/newStorageMedium', newStorageMedium);
app.use('/writeAppAuthorities', writeAppAuthorities);
app.use('/writeAppContact', writeAppContact);
app.use('/writeAppGroupAuthorities', writeAppGroupAuthorities);
app.use('/writeAppGroupMembers', writeAppGroupMembers);
app.use('/writeAppGroups', writeAppGroups);
app.use('/writeAppMenus', writeAppMenus);
app.use('/writeAppMessage', writeAppMessage);
app.use('/writeAppPersistentLogins', writeAppPersistentLogins);
app.use('/writeAppRoom', writeAppRoom);
app.use('/writeAppUsers', writeAppUsers);
app.use('/writeCcontactAll', writeCcontactAll);
app.use('/writeContrDevices', writeContrDevices);
app.use('/writeContrServicesCap', writeContrServicesCap);
app.use('/writeContractAll', writeContractAll);
app.use('/writeContractHistory', writeContractHistory);
app.use('/writeCustomerAll', writeCustomerAll);
app.use('/writeDirectoryNumber', writeDirectoryNumber);
app.use('/writeInfoContrCheck', writeInfoContrCheck);
app.use('/writeInfoContrCombo', writeInfoContrCombo);
app.use('/writeInfoContrText', writeInfoContrText);
app.use('/writeInfoCustCheck', writeInfoCustCheck);
app.use('/writeInfoCustCombo', writeInfoCustCombo);
app.use('/writeInfoCustText', writeInfoCustText);
app.use('/writeOrderhdrAll', writeOrderhdrAll);
app.use('/writeOrdertrailer', writeOrdertrailer);
app.use('/writePort', writePort);
app.use('/writePrServSpcodeHist', writePrServSpcodeHist);
app.use('/writePrServStatusHist', writePrServStatusHist);
app.use('/writeProfileService', writeProfileService);
app.use('/writeStorageMedium', writeStorageMedium);
app.use('/deleteAppAuthorities', deleteAppAuthorities);
app.use('/deleteAppContact', deleteAppContact);
app.use('/deleteAppGroupAuthorities', deleteAppGroupAuthorities);
app.use('/deleteAppGroupMembers', deleteAppGroupMembers);
app.use('/deleteAppGroups', deleteAppGroups);
app.use('/deleteAppMenus', deleteAppMenus);
app.use('/deleteAppMessage', deleteAppMessage);
app.use('/deleteAppPersistentLogins', deleteAppPersistentLogins);
app.use('/deleteAppRoom', deleteAppRoom);
app.use('/deleteAppUsers', deleteAppUsers);
app.use('/deleteCcontactAll', deleteCcontactAll);
app.use('/deleteContrDevices', deleteContrDevices);
app.use('/deleteContrServicesCap', deleteContrServicesCap);
app.use('/deleteContractAll', deleteContractAll);
app.use('/deleteContractHistory', deleteContractHistory);
app.use('/deleteCustomerAll', deleteCustomerAll);
app.use('/deleteDirectoryNumber', deleteDirectoryNumber);
app.use('/deleteInfoContrCheck', deleteInfoContrCheck);
app.use('/deleteInfoContrCombo', deleteInfoContrCombo);
app.use('/deleteInfoContrText', deleteInfoContrText);
app.use('/deleteInfoCustCheck', deleteInfoCustCheck);
app.use('/deleteInfoCustCombo', deleteInfoCustCombo);
app.use('/deleteInfoCustText', deleteInfoCustText);
app.use('/deleteOrderhdrAll', deleteOrderhdrAll);
app.use('/deleteOrdertrailer', deleteOrdertrailer);
app.use('/deletePort', deletePort);
app.use('/deletePrServSpcodeHist', deletePrServSpcodeHist);
app.use('/deletePrServStatusHist', deletePrServStatusHist);
app.use('/deleteProfileService', deleteProfileService);
app.use('/deleteStorageMedium', deleteStorageMedium);

// catch 404 and forward to error handler
app.use(function(req, res, next) {
  next(createError(404));
});

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;
